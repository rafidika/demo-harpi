[{"/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/index.js":"1","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/App.js":"2","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/reportWebVitals.js":"3","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/Admin.js":"4","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/SignIn.js":"5","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/Form.js":"6","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/Register.js":"7","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/Alert.js":"8","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/Main.js":"9","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/NewMembers.js":"10","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/SessionExpired.js":"11","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/MemberData.js":"12","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/Navbar.js":"13","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/IdCardModal.js":"14","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/Bukti.js":"15","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/generateIdCard.js":"16","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/EditMember.js":"17","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/Loading.js":"18","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/Success.js":"19"},{"size":717,"mtime":1608957269393,"results":"20","hashOfConfig":"21"},{"size":740,"mtime":1610082196414,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1608559904562,"results":"23","hashOfConfig":"21"},{"size":659,"mtime":1609720775992,"results":"24","hashOfConfig":"21"},{"size":3422,"mtime":1609910417072,"results":"25","hashOfConfig":"21"},{"size":7225,"mtime":1610082217074,"results":"26","hashOfConfig":"21"},{"size":2090,"mtime":1609907505285,"results":"27","hashOfConfig":"21"},{"size":370,"mtime":1609077119912,"results":"28","hashOfConfig":"21"},{"size":1945,"mtime":1610082517815,"results":"29","hashOfConfig":"21"},{"size":5022,"mtime":1609909887147,"results":"30","hashOfConfig":"21"},{"size":395,"mtime":1609723940614,"results":"31","hashOfConfig":"21"},{"size":2952,"mtime":1609909183744,"results":"32","hashOfConfig":"21"},{"size":1669,"mtime":1610082489990,"results":"33","hashOfConfig":"21"},{"size":4604,"mtime":1609908873070,"results":"34","hashOfConfig":"21"},{"size":1254,"mtime":1609907958235,"results":"35","hashOfConfig":"21"},{"size":530,"mtime":1609676400379,"results":"36","hashOfConfig":"21"},{"size":8198,"mtime":1609760708495,"results":"37","hashOfConfig":"21"},{"size":288,"mtime":1609909875665,"results":"38","hashOfConfig":"21"},{"size":688,"mtime":1610082667705,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"17pm453",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/index.js",[],["87","88"],"/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/App.js",[],"/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/reportWebVitals.js",[],"/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/Admin.js",["89"],"import React, { Fragment, useState, useEffect } from 'react'\nimport SignIn from './SignIn'\nimport Main from './Main'\n\nconst Admin = () => {\n    const [signedIn, setSignedIn] = useState(false);\n    const verified = localStorage.getItem(\"token\");\n\n    const onRouteChange = (state) => {\n        setSignedIn(state);\n    }\n\n    useEffect(() => {\n        if (verified) {\n            setSignedIn(true);\n            console.log(\"Success!\");\n        }\n    }, []);\n\n    return (\n        <Fragment>\n            {signedIn ? <Main onRouteChange={onRouteChange} /> : <SignIn onRouteChange={onRouteChange} />\n            }\n        </Fragment>\n    )\n}\n\nexport default Admin;","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/SignIn.js",["90","91"],"import React, { useState, useEffect } from 'react'\nimport Axios from 'axios'\nimport '../styles/adminloginXL.css'\nimport Alert from './Alert';\n\nexport default function SignIn( {onRouteChange} ) {\n    const [success, setSuccess] = useState(\"init\");\n    const [Username, setUsername] = useState(\"\");\n    const [Password, setPassword] = useState(\"\");\n    const [alert, setAlert] = useState({show: false, msg: \"\", type: \"\"})\n\n    const signIn = async (e) => {\n        e.preventDefault();\n        try {\n            const signInData = new FormData();\n            signInData.append(\"Username\", Username);\n            signInData.append(\"Password\", Password);\n\n            await Axios.post(\"http://localhost:8080/signin\", signInData, {\n                headers: {\n                    \"Content-Type\":\"multipart/form-data\"\n                }\n            })\n            .then(res => {\n                if (res.data.accessToken) {\n                    setSuccess(\"init\");\n                    localStorage.setItem(\"token\", res.data.accessToken);\n                    onRouteChange(true);\n                } else {\n                    showAlert(true, res.data, \"danger\")\n                }\n            })\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    const showAlert = (show = false, msg = \"\", type=\"\") => {\n        setAlert({show, msg, type})\n    }\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row min-vw-100 min-vh-100\">\n                {/* Green thingy */}\n                <div className=\"col-xl-7\" id=\"rest\">\n                    <div className=\"row\">\n                        <div className=\"col-3 col-xl-3\" id=\"logo\">\n                            <img src=\"assets/logo-transparent.png\" className=\"img-fluid logo-main-page\" alt=\"Logo HARPI MELATI\"/>\n                        </div>\n                        <div className=\"col-9 col-xl-9\" id=\"himpunan\">\n                            <h3 className=\"text-huge\">HARPI MELATI</h3>\n                            <p className=\"text-huge\">Himpunan Perias Pengantin Indonesia \"MELATI\"</p>\n                        </div>\n                    </div>\n                </div>\n                {/* Form */}\n                <div className=\"col-xl-5 d-flex justify-content-center align-items-center\" id=\"form\" >\n                    <form onSubmit={signIn}>\n                        <p id=\"title\">Masuk ke Halaman Admin</p>\n                        <br /><br />\n                        {alert.show && <Alert msg={alert.msg} type={alert.type} removeAlert={showAlert}/>}\n                        <label htmlFor=\"username\">Username</label>\n                        <br />\n                        <input type=\"text\" name=\"Username\" required id=\"username\" value={Username} onChange={e => setUsername(e.target.value)}/>\n                        <br /><br />\n                        <label htmlFor=\"password\">Password</label>\n                        <br />\n                        <input type=\"password\" name=\"Password\" required id=\"password\" value={Password} onChange={e => setPassword(e.target.value)}/>\n                        <br /><br />\n                        <input type=\"submit\" value=\"Masuk\" id=\"masuk\"/>\n                        <br /><br />\n                        <p id=\"copyright\">Copyright 2021 Himpunan Perias Pengantin Indonesia \"MELATI\"</p>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/Form.js",[],"/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/Register.js",["92","93"],"import React, { useState } from 'react'\nimport Axios from 'axios'\n\nexport default function Register() {\n    const [Nama, setNama] = useState(\"\");\n    const [Email, setEmail] = useState(\"\");\n    const [Username, setUsername] = useState(\"\");\n    const [Password, setPassword] = useState(\"\");\n\n    const onSubmitForm = async e => {\n        e.preventDefault();\n        try {\n            const adminData = new FormData();\n            adminData.append('Nama', Nama);\n            adminData.append('Username', Username);\n            adminData.append('Password', Password);\n\n            await Axios.post('http://localhost:8080/45jPyQvLRE', adminData, {\n                headers: {\n                    \"Content-Type\":\"multipart/form-data\"\n                }\n            })\n            .then(\n                window.location.href = \"http://localhost:3000/admin\"\n            )\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"d-flex p-2\" id=\"form\">\n                    <form onSubmit={onSubmitForm}>\n                        <p>Daftar Admin Baru</p>\n                        <br />\n                        <label htmlFor=\"name\">Nama</label>\n                        <br />\n                        <input type=\"text\" name=\"name\" id=\"name\" value={Nama} onChange={e => setNama(e.target.value)}/>\n                        <br />\n                        <br />\n                        <label htmlFor=\"username\">Username</label>\n                        <br />\n                        <input type=\"text\" name=\"Username\" id=\"username\" value={Username} onChange={e => setUsername(e.target.value)}/>\n                        <br />\n                        <label htmlFor=\"password\">Password</label>\n                        <br />\n                        <input type=\"password\" name=\"Password\" id=\"password\" value={Password} onChange={e => setPassword(e.target.value)}/>\n                        <br />\n                        <input type=\"submit\" value=\"Kirim\"/>\n                    </form>\n            </div>\n        </div>\n    )\n}\n","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/Alert.js",["94","95"],"import React, { useEffect } from 'react'\n\nexport default function Alert({msg, type, removeAlert}) {\n    useEffect(() => {\n        const timeout = setTimeout(() => {\n            removeAlert()\n        }, 3000);\n        return () => clearTimeout;\n    }, []);\n    \n    return (\n        <div>\n           <p className={`alert alert-${type}`}>{msg}</p> \n        </div>\n    )\n}\n","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/Main.js",["96"],"/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/NewMembers.js",["97","98"],"import Axios from 'axios';\nimport React, { Fragment, useEffect, useState } from 'react'\nimport Bukti from './Bukti'\n// import { generateIdCard, IdCardModal } from './IdCardModal'\nimport '../styles/admin.css'\nimport IdCardModal from './IdCardModal';\nimport generateIdCard from './generateIdCard';\nimport Loading from './Loading';\n\nconst NewMembers = () => {\n    const [members, setMembers] = useState();\n    \n    const getMembers = async () => {\n        try {\n            // const response = await fetch(\"http://localhost:8080/admin\");\n            // const jsonData = await response.json();\n            // setMembers(jsonData);\n            await Axios.get(\"http://localhost:8080/admin\", {\n                headers: {\n                    Authorization: localStorage.getItem(\"token\")\n                }\n            })\n            .then(res => {\n                if(!res.data.tokenexp) {\n                    console.log(res.data);\n                    setMembers(res.data);\n                }\n            })\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n\n    const deleteMember = async (id) => {\n        try {\n           await Axios.delete(`http://localhost:8080/admin/${id}`, {\n                headers: {\n                    Authorization: localStorage.getItem(\"token\")\n                }\n            })\n           .then(setMembers(members.filter(member => member.id !== id)))\n           .then(getMembers());\n        } catch (err) {\n            console.log(err.message);\n        }\n    }\n\n    const getOneMember = (id) => {\n        const elementPos = members.map(member => member.id).indexOf(id);\n        return members[elementPos];\n    }\n\n    // const imgUrl = (idImg, img) => {\n    //     const elementPos = members.map(member => member.id).indexOf(idImg);\n    //     let idCardMember = members[elementPos];\n    //     idCardMember.idcard = img;\n    //     const newMemb = members;\n    //     newMemb[elementPos] = idCardMember;\n    //     setMembers(newMemb);\n    // }\n\n    useEffect(() => {\n        getMembers();\n    }, []);\n\n    return (\n        <Fragment>\n            {/* <IdCard id={1} /> */}\n            <div className=\"container-fluid\" id=\"TabelSatu\">\n                <p className=\"table-title\">Permohonan Anggota Baru</p>\n                <hr />\n                {members ? (\n                        <table className=\"table table-borderless\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">Nama</th>\n                                    <th scope=\"col\">Email</th>\n                                    <th scope=\"col\">No. HP</th>\n                                    <th scope=\"col\">Tanggal Lahir</th>\n                                    <th scope=\"col\">Domisili</th>\n                                    <th scope=\"col\"></th>\n                                    <th scope=\"col\"></th>\n                                    {/* <th scope=\"col\"></th> */}\n                                    <th scope=\"col\"></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {members.map(member => (\n                                    (!member.verified) && (\n                                        <tr key={member.id}>\n                                            <td className=\"nama\">{member.nama}</td>\n                                            <td className=\"email\">{member.email}</td>\n                                            <td className=\"tanggal\">{member.hp}</td>\n                                            <td className=\"tanggal\">{member.tanggal.split(\"T\")[0]}</td>\n                                            <td className=\"domisili\">{member.domisili}</td>\n                                            <td>\n                                                <Bukti img={member.buktitrf} />\n                                            </td>\n                                            <td>\n                                                <IdCardModal data={member}/>\n                                            </td>\n                                            <td>\n                                                <button \n                                                    className=\"hapus\" \n                                                    onClick={() => deleteMember(member.id)}>\n                                                        Hapus\n                                                </button>\n                                            </td>\n                                            {/* <IdCard id={member.id} imgUrl={imgUrl} /> */}\n                                        </tr>\n                                    )\n                                ))}\n                            </tbody>\n                        </table>\n                    \n                ) : <Loading className=\"d-flex justify-content-center\" />}\n                \n            </div>\n        </Fragment>\n    )\n}\n\nexport default NewMembers;\n","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/SessionExpired.js",[],"/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/MemberData.js",[],"/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/Navbar.js",["99","100"],"/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/IdCardModal.js",["101","102","103","104","105","106","107"],"import React, { Fragment, useState } from 'react'\nimport Alert from './Alert'\nimport '../styles/idcardnew.css'\nimport '../styles/admin.css'\nimport { saveAs } from 'file-saver'\nimport domtoimage from 'dom-to-image';\nimport Axios from 'axios';\n\nfunction IdCardModal (data) {\n    const [NamaLengkap, setNama] = useState(data.data.nama);\n    const [Email, setEmail] = useState(data.data.email);\n    const [NoHp, setNoHp] = useState(data.data.hp);\n    const [TanggalLahir, setTanggal] = useState(data.data.tanggal.split(\"T\")[0]);\n    const [Domisili, setDomisili] = useState(data.data.domisili);\n    const [Verified, setVerified] = useState(data.data.verified);\n    const [alert, setAlert] = useState({show: false, msg: \"\", type: \"\"})\n    \n    const generateIdCard = () => {\n        var node = document.getElementById(`id-card-${data.data.id}`);\n        domtoimage.toPng(node)\n        .then(function (dataUrl) {\n            saveIdToServer(dataUrl);\n        })\n        .catch(function (error) {\n            console.error('oops, something went wrong!', error);\n        });\n    }\n\n    const saveIdToServer = async (imgSrc) => {\n        const editData = new FormData();\n        editData.append('Id', data.data.id);\n        editData.append('IdCard', imgSrc);\n        editData.append('Verified', Verified);\n        editData.append('Domisili', Domisili);\n        editData.append('TanggalLahir', TanggalLahir);\n        editData.append('NoHp', NoHp);\n        editData.append('Email', Email);\n        editData.append('NamaLengkap', NamaLengkap);\n        \n        try {\n            await Axios.put(`http://localhost:8080/admin/add-id-card/${data.data.id}`, editData, {\n                headers: {\n                    Authorization: localStorage.getItem(\"token\")\n                }\n            })\n            .then(verifMember(data.data))\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    const verifMember = async (verifyMember) => {\n        verifyMember.verified = true;\n        try {\n            await Axios.put(`http://localhost:8080/admin/verify/${verifyMember.id}`, verifyMember, {\n                headers: {\n                    Authorization: localStorage.getItem(\"token\")\n                }\n            })\n            // .then(window.location.href = \"/admin\");\n        } catch (err) {\n            console.log(err.message);\n        }\n    }\n\n    const showAlertSend = (show = false, msg = \"\", type = \"\") => {\n        setAlert({show, msg, type})\n    }\n\n\n    return (\n        <Fragment>\n           <button type=\"button\" className=\"bukti\" data-toggle=\"modal\" data-target={`#id-card-modal-${data.data.id}`}>\n            Kartu Anggota\n            </button>\n            <div className=\"modal\" id={`id-card-modal-${data.data.id}`}>\n                <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h4 className=\"modal-title\">Kartu Anggota</h4>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n                        </div>\n                        <div style={{'left' : '25px'}} className=\"modal-body\">\n                            {alert.show && <Alert msg={alert.msg} type={alert.type} removeAlert={showAlertSend}/>}\n                            <div id={`id-card-${data.data.id}`} className=\"container-id-card\">\n                                <div className=\"header-id-card\">\n                                    <img src=\"/assets/logo-white.png\" alt=\"logo\" className=\"logo-white-id\" />\n                                    <h4 className=\"title-id-card\">Kartu Tanda Anggota HARPI Melati</h4>\n                                </div>\n                                <h4 className=\"number-id-card\">ID               : {data.data.id}</h4>\n                                <h4 className=\"nama-id-card\">Nama        : {data.data.nama}</h4>\n                                <h4 className=\"nohp-id-card\">No. HP      : {data.data.hp}</h4>\n                                <div className=\"rectangle-id-card\">\n                                </div>\n                                <h4 className=\"date-id-card\">Bergabung pada 28 Desember 2020</h4>\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"kirim\" onClick={generateIdCard}>Kirim</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default IdCardModal;\n","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/Bukti.js",["108"],"import React, { Fragment, useState } from 'react'\nimport '../styles/admin.css'\n\nfunction Bukti (img) {\n    return (\n        <Fragment>\n           <button type=\"button\" className=\"bukti\" data-toggle=\"modal\" data-target=\"#buktiTrf\">\n            Lihat Bukti\n            </button>\n            <div class=\"modal\" id=\"buktiTrf\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h4 class=\"modal-title\">Bukti Transfer</h4>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <img \n                                style={{width: '100%'}} \n                                src={img.img} \n                                alt=\"Bukti transfer\"/>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Tutup</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Bukti;\n","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/generateIdCard.js",["109"],"import { saveAs } from 'file-saver'\nimport domtoimage from 'dom-to-image';\n\nexport default function generateIdCard(id) {\n    var node = document.getElementById(`id-card-${id.id}`);\n    console.log(node);\n    var idcard = {};\n\n    domtoimage.toPng(node)\n        .then(function (dataUrl) {\n            console.log(dataUrl);\n            idcard.id = id.id;\n            idcard.url = dataUrl;\n        })\n        .catch(function (error) {\n            console.error('oops, something went wrong!', error);\n        });\n\n    return idcard;\n}","/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/EditMember.js",[],"/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/Loading.js",[],"/Users/nabelanita/Development/Projects/Web Development/FirstSimpleWebsite/client/src/components/Success.js",["110"],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":18,"column":8,"nodeType":"117","endLine":18,"endColumn":10,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":1,"column":27,"nodeType":"121","messageId":"122","endLine":1,"endColumn":36},{"ruleId":"119","severity":1,"message":"123","line":7,"column":12,"nodeType":"121","messageId":"122","endLine":7,"endColumn":19},{"ruleId":"119","severity":1,"message":"124","line":6,"column":12,"nodeType":"121","messageId":"122","endLine":6,"endColumn":17},{"ruleId":"119","severity":1,"message":"125","line":6,"column":19,"nodeType":"121","messageId":"122","endLine":6,"endColumn":27},{"ruleId":"119","severity":1,"message":"126","line":5,"column":15,"nodeType":"121","messageId":"122","endLine":5,"endColumn":22},{"ruleId":"115","severity":1,"message":"127","line":9,"column":8,"nodeType":"117","endLine":9,"endColumn":10,"suggestions":"128"},{"ruleId":"119","severity":1,"message":"129","line":10,"column":12,"nodeType":"121","messageId":"122","endLine":10,"endColumn":19},{"ruleId":"119","severity":1,"message":"130","line":7,"column":8,"nodeType":"121","messageId":"122","endLine":7,"endColumn":22},{"ruleId":"119","severity":1,"message":"131","line":48,"column":11,"nodeType":"121","messageId":"122","endLine":48,"endColumn":23},{"ruleId":"132","severity":1,"message":"133","line":13,"column":17,"nodeType":"134","endLine":13,"endColumn":50},{"ruleId":"132","severity":1,"message":"133","line":27,"column":33,"nodeType":"134","endLine":27,"endColumn":99},{"ruleId":"119","severity":1,"message":"135","line":5,"column":10,"nodeType":"121","messageId":"122","endLine":5,"endColumn":16},{"ruleId":"119","severity":1,"message":"136","line":10,"column":25,"nodeType":"121","messageId":"122","endLine":10,"endColumn":32},{"ruleId":"119","severity":1,"message":"125","line":11,"column":19,"nodeType":"121","messageId":"122","endLine":11,"endColumn":27},{"ruleId":"119","severity":1,"message":"137","line":12,"column":18,"nodeType":"121","messageId":"122","endLine":12,"endColumn":25},{"ruleId":"119","severity":1,"message":"138","line":13,"column":26,"nodeType":"121","messageId":"122","endLine":13,"endColumn":36},{"ruleId":"119","severity":1,"message":"139","line":14,"column":22,"nodeType":"121","messageId":"122","endLine":14,"endColumn":33},{"ruleId":"119","severity":1,"message":"140","line":15,"column":22,"nodeType":"121","messageId":"122","endLine":15,"endColumn":33},{"ruleId":"119","severity":1,"message":"141","line":1,"column":27,"nodeType":"121","messageId":"122","endLine":1,"endColumn":35},{"ruleId":"119","severity":1,"message":"135","line":1,"column":10,"nodeType":"121","messageId":"122","endLine":1,"endColumn":16},{"ruleId":"119","severity":1,"message":"142","line":7,"column":11,"nodeType":"121","messageId":"122","endLine":7,"endColumn":25},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'verified'. Either include it or remove the dependency array.","ArrayExpression",["145"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'success' is assigned a value but never used.","'Email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'timeout' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'removeAlert'. Either include it or remove the dependency array. If 'removeAlert' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["146"],"'members' is assigned a value but never used.","'generateIdCard' is defined but never used.","'getOneMember' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'saveAs' is defined but never used.","'setNama' is assigned a value but never used.","'setNoHp' is assigned a value but never used.","'setTanggal' is assigned a value but never used.","'setDomisili' is assigned a value but never used.","'setVerified' is assigned a value but never used.","'useState' is defined but never used.","'backToHomePage' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [verified]",{"range":"151","text":"152"},"Update the dependencies array to be: [removeAlert]",{"range":"153","text":"154"},[451,453],"[verified]",[251,253],"[removeAlert]"]